// ------------------------------------------------------------------------------
// <auto-generated>
//    Generated by avrogen, version 1.11.0.0
//    Changes to this file may cause incorrect behavior and will be lost if code
//    is regenerated
// </auto-generated>
// ------------------------------------------------------------------------------
namespace DataSerialization.AvroAddressBook
{
	using System;
	using System.Collections.Generic;
	using System.Text;
	using Avro;
	using Avro.Specific;
	
	public partial class AddressBook : ISpecificRecord
	{
		public static Schema _SCHEMA = Avro.Schema.Parse(@"{""type"":""record"",""name"":""AddressBook"",""namespace"":""DataSerialization.AvroAddressBook"",""fields"":[{""name"":""Contacts"",""type"":{""type"":""array"",""items"":{""type"":""record"",""name"":""Contact"",""namespace"":""DataSerialization.AvroAddressBook"",""fields"":[{""name"":""Name"",""type"":""string""},{""name"":""Address"",""type"":{""type"":""record"",""name"":""Address"",""namespace"":""DataSerialization.AvroAddressBook"",""fields"":[{""name"":""StreetNumber"",""type"":""int""},{""name"":""Street"",""type"":""string""},{""name"":""City"",""type"":""string""},{""name"":""State"",""type"":""string""},{""name"":""Country"",""type"":""string""},{""name"":""PostalCode"",""type"":""int""}]}},{""name"":""Id"",""type"":""int""},{""name"":""PhoneNumber"",""type"":""int""},{""name"":""Relation"",""type"":{""type"":""enum"",""name"":""Relation"",""namespace"":""DataSerialization.AvroAddressBook"",""symbols"":[""Business"",""Friend"",""Family"",""Aquaintance""]}},{""name"":""Birthday"",""type"":""string""}]}}}]}");
		private IList<DataSerialization.AvroAddressBook.Contact> _Contacts;
		public virtual Schema Schema
		{
			get
			{
				return AddressBook._SCHEMA;
			}
		}
		public IList<DataSerialization.AvroAddressBook.Contact> Contacts
		{
			get
			{
				return this._Contacts;
			}
			set
			{
				this._Contacts = value;
			}
		}
		public virtual object Get(int fieldPos)
		{
			switch (fieldPos)
			{
			case 0: return this.Contacts;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Get()");
			};
		}
		public virtual void Put(int fieldPos, object fieldValue)
		{
			switch (fieldPos)
			{
			case 0: this.Contacts = (IList<DataSerialization.AvroAddressBook.Contact>)fieldValue; break;
			default: throw new AvroRuntimeException("Bad index " + fieldPos + " in Put()");
			};
		}
	}
}
